{"version":3,"sources":["components/Cards/Cards.module.css","components/Title/Title.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Title","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","a","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","CountryPicker","App","state","fetchedData","this","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e687d01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__7q33K\",\"card\":\"Cards_card__1isxe\",\"infected\":\"Cards_infected__3n_ul\",\"recovered\":\"Cards_recovered__1S8eC\",\"deaths\":\"Cards_deaths__1AoNr\"};","import React from 'react';\r\n\r\nconst Title = () => {\r\n    return(\r\n        <h1>Corona Virus - World Stats</h1>\r\n    )\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\r\n    console.log(confirmed);\r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color = \"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                           <CountUp  start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color = \"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                           <CountUp  start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recovered cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color = \"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                           <CountUp  start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async () => {\r\n    try {\r\n        const {data:{confirmed, recovered,deaths,lastUpdate}} = await axios.get(url);\r\n        return {confirmed,recovered,deaths,lastUpdate};\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData= async () => {\r\n    try {\r\n      const { data } = await axios.get(`${url}/daily`);\r\n      const modifiedData = data.map((dailyData)=>({\r\n          confirmed: dailyData.confirmed.total,\r\n          deaths: dailyData.deaths.total,\r\n          date: dailyData.reportDate,\r\n      }));  \r\n      return modifiedData;\r\n    } catch (error) {\r\n\r\n    }\r\n}","import React, {useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport { Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = () => {\r\n    //console.log(props);\r\n    const [dailyData,setDailyData] = useState([]);\r\n    useEffect(() => {\r\n       const fetchAPI = async () => {\r\n           setDailyData(await fetchDailyData());\r\n       }\r\n       //console.log(dailyData);\r\n       fetchAPI();\r\n    },[dailyData]);\r\n\r\n    const lineChart = (\r\n       dailyData.length\r\n       ?( \r\n        <Line\r\n          data={{\r\n             labels: dailyData.map(({ date }) => date),\r\n             datasets: [{\r\n                 data:dailyData.map(({ confirmed})=> confirmed),\r\n                 label: 'Infected',\r\n                 borderColor: '#3333ff',\r\n                 fill: true,\r\n             },{\r\n                data:dailyData.map(({ deaths })=> deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                fill: true,\r\n\r\n             }],\r\n         }}\r\n        />) : null\r\n\r\n    );\r\n    return(\r\n        <div className={styles.container}>\r\n            {lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nconst CountryPicker = () => {\r\n    return(\r\n        <h1>Country Picker - Coming Soon</h1>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\n//import Cards from './components/Cards/Cards';\r\n//import Chart from './components/Chart/Chart';\r\n//import CountryPicker from './components/CountryPicker/CountryPicker';\r\n\r\nimport { Title,Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data:{},\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({data:fetchedData});\r\n        \r\n    }\r\n\r\n    render(){\r\n        const {data} = this.state;\r\n    return (\r\n        <div className={styles.container}>\r\n            <Title/>\r\n            <Cards data={data}/>\r\n            <CountryPicker/>\r\n            <Chart/>\r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2IXE4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3GvSO\"};"],"sourceRoot":""}